---
- name: create namespace CZERTAINLY
  kubernetes.core.k8s:
    namespace: default
    wait: true
    state: present
    src: /etc/ansible/roles/czertainly/files/namespace-czertainly.yaml
  tags:
    - czertainly_namespace

# this will always overwrite target file and we are ignoring change
- name: create secret for harbor
  ansible.builtin.shell:
    cmd: /var/lib/rancher/rke2/bin/kubectl create secret -n czertainly docker-registry {{ docker.secret }} --docker-server={{ docker.server }} --docker-username={{ docker.username }} --docker-password={{ docker.password }} --docker-email={{ docker.email }} --dry-run='client' -o yaml > /root/install/docker-secret.yaml
  changed_when: false
  tags:
    - czertainly_secret

# this apply only when changed - there must be more elegant way, but
# problem with dockerconfigjson is that thre is 2 times base64 encoded
# password
#
- name: register secret for harbor
  kubernetes.core.k8s:
    namespace: czertainly
    state: present
    src: /root/install/docker-secret.yaml
  tags:
    - czertainly_secret

# Download sample trusted-certificates.pem file
- name: Download sample trusted-certificates.pem file
  ansible.builtin.get_url:
    url: https://github.com/3KeyCompany/CZERTAINLY-Helm-Charts/raw/develop/samples/trusted-certificates.pem
    dest: /home/czertainly/trusted-certificates-sample.pem
    force_basic_auth: yes
    backup: no
    owner: czertainly
    group: czertainly
    mode: 0644
  tags:
    - czertainly_trusted_certificates

#- debug: var=ansible

# - name: Create openssl.conf
#   template:
#     src: "openssl.j2"
#     dest: "/home/czertainly/openssl.cnf"
#     owner: czertainly
#     group: czertainly
#     mode: '0644'
#   tags:
#     - czertainly
#     - czertainly_app
#     - czertainly_openssl_cnf

# - name: wait till prerequisites are ready (max 10min, delay=5s)
#   shell:
#     cmd: "/var/lib/rancher/rke2/bin/kubectl -n {{ item }} get pods -o json |jq '.items[].status.phase' | grep -v Succeeded | sort -u"
#   register: prq
#   until: prq.stdout == '"Running"'
#   retries: 120
#   delay: 5
#   changed_when: false
#   with_items:
#     - cert-manager
#     - ingress-nginx
#   tags:
#     - czertainly_wait4prerequisites

- name: download default values.yaml file
  shell: helm show values oci://harbor.3key.company/czertainly-helm/czertainly > /tmp/czertainly-values-default.yaml
  changed_when: false
  tags:
    - czertainly_values
    - czertainly_values_default

- name: copy default czertainly-values.yaml file
  template:
    src: "/tmp/czertainly-values-default.yaml"
    dest: "/root/install/czertainly-values.yaml"
    owner: czertainly
    group: czertainly
    mode: '0644'
  tags:
    - czertainly_values
    - czertainly_values_default

- name: copy local customized czertainly-values.yaml file
  ansible.builtin.template:
    src: "czertainly-values.local.yaml"
    dest: "/root/install/czertainly-values.local.yaml"
  tags:
    - czertainly_values
    - czertainly_values_local

- name: install czertainly
  kubernetes.core.helm:
    timeout: 10m
    release_namespace: czertainly
    release_name: czertainly-tlm
    chart_ref: oci://harbor.3key.company/czertainly-helm/czertainly
    values_files:
      - /root/install/czertainly-values.yaml
      - /root/install/czertainly-values.local.yaml
  tags:
    - czertainly_install

# installing sometimes fails with following error, no matter if install via kubernetes.core.helm or from commandline :(

# fatal: [localhost]: FAILED! => {"changed": false, "command": "/usr/sbin/helm upgrade -i --reset-values --values=/root/install/czertainly-values.yaml --values=/root/install/czertainly-values.local.yaml czertainly-tlm oci://harbor.3key.company/czertainly-helm/czertainly", "msg": "Failure when executing Helm command. Exited 1.\nstdout: Release \"czertainly-tlm\" does not exist. Installing it now.\n\nstderr: Pulled: harbor.3key.company/czertainly-helm/czertainly:0.3.0\nDigest: sha256:106adf92b1146b1cda87ec633d63562d98b4b0f4370d7a559da2e4e5b45c1cc0\nError: Internal error occurred: failed calling webhook \"validate.nginx.ingress.kubernetes.io\": failed to call webhook: Post \"https://ingress-nginx-controller-admission.ingress-nginx.svc:443/networking/v1/ingresses?timeout=10s\": no endpoints available for service \"ingress-nginx-controller-admission\"\n", "stderr": "Pulled: harbor.3key.company/czertainly-helm/czertainly:0.3.0\nDigest: sha256:106adf92b1146b1cda87ec633d63562d98b4b0f4370d7a559da2e4e5b45c1cc0\nError: Internal error occurred: failed calling webhook \"validate.nginx.ingress.kubernetes.io\": failed to call webhook: Post \"https://ingress-nginx-controller-admission.ingress-nginx.svc:443/networking/v1/ingresses?timeout=10s\": no endpoints available for service \"ingress-nginx-controller-admission\"\n", "stderr_lines": ["Pulled: harbor.3key.company/czertainly-helm/czertainly:0.3.0", "Digest: sha256:106adf92b1146b1cda87ec633d63562d98b4b0f4370d7a559da2e4e5b45c1cc0", "Error: Internal error occurred: failed calling webhook \"validate.nginx.ingress.kubernetes.io\": failed to call webhook: Post \"https://ingress-nginx-controller-admission.ingress-nginx.svc:443/networking/v1/ingresses?timeout=10s\": no endpoints available for service \"ingress-nginx-controller-admission\""], "stdout": "Release \"czertainly-tlm\" does not exist. Installing it now.\n", "stdout_lines": ["Release \"czertainly-tlm\" does not exist. Installing it now."]}

# - name: install czertainly
#   shell:
#     cmd: helm install --namespace czertainly -f /root/install/czertainly-values.yaml -f /root/install/czertainly-values.local.yaml czertainly-tlm oci://harbor.3key.company/czertainly-helm/czertainly
